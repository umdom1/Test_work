import pytest
from main import uniqum_name, unique_names, top, name_count, names_codes, get_name


class Test_Something:
    def test_uniqum_name(self):
        check_str = 'Адилет, Азамат, Александр, Алексей, Алена,' \
                    ' Анатолий, Анна, Антон, Вадим, Валерий, Владимир,' \
                    ' Денис, Дмитрий, Евгений, Елена, Иван, Илья, Кирилл,' \
                    ' Константин, Максим, Михаил, Никита, Николай, Олег,' \
                    ' Павел, Ринат, Роман, Сергей, Татьяна, Тимур,' \
                    ' Филипп, Эдгар, Юрий'
        assert uniqum_name(unique_names) == check_str

    def test_name_count(self):

        check_list = ['Александр: 10', 'Евгений: 5', 'Максим: 4']
        assert name_count(top) == check_list

    @pytest.mark.parametrize('id, names, expected',
                             [
                                 (1, names_codes, (
                                 '1 — число цели, которая проявляется в форме агрессивности и амбиций',
                                 'Адилет, Азамат, Денис, Евгений, Ринат, Роман, Сергей')),
                                 (2, names_codes, (
                                 '2 — число равновесия и контраста одновременно, поддерживает равновесие, смешивая позитивные и негативные качества',
                                 'Владимир, Иван, Тимур')),
                                 (3, names_codes, (
                                 '3 — неустойчивость, объединяет талант и весёлость, символ приспосабливаемости',
                                 'Олег, Татьяна')),
                                 (4, names_codes, ('4 — означает устойчивость и прочность', 'Антон, Кирилл, Павел')),
                                 (5, names_codes, (
                                 '5 — символизирует риск, свободу и душевное беспокойство, которое толкает человека к путешествиям и новому опыту. С одной стороны, это самое счастливое число, с другой — самое непредсказуемое',
                                 'Алексей, Анна, Елена, Илья, Никита, Эдгар')),
                                 (6, names_codes, (
                                 '6 — символ надёжности. Идеальное число, которое делится как на чётное, так и на нечётное, объединяя элементы каждого',
                                 'Анатолий, Вадим, Николай')),
                                 (7, names_codes, (
                                 '7 — символизирует тайну, а также изучение и знание как путь исследования неизвестного и невидимого',
                                 'Дмитрий, Максим')),
                                 (8, names_codes, (
                                 '8 — число материального успеха, означает надёжность, доведённую до совершенства, символ всеобщего успеха',
                                 'Валерий, Константин, Михаил, Филипп, Юрий')),
                                 (9, names_codes, (
                                 '9 — указывает на сильную личность с потенциальным интеллектом, способную к высокому развитию',
                                 'Александр, Алена')),
                             ]
                             )
    def test_get_name(self, id, names, expected):
        res = get_name(names, id)
        assert res == expected













